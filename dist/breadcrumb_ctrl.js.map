{"version":3,"sources":["../src/breadcrumb_ctrl.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,a;;AACE,qB,kBAAA,S;;AACA,uB,yCAAA,W;;;;;;;;;;;;;;;;;;;;;2DAEH,c;;;AACF;;;;;;;AAOA,wCAAY,MAAZ,EAAoB,SAApB,EAA+B,SAA/B,EAA0C,UAA1C,EAAsD;AAAA;;AAAA,kHAC5C,MAD4C,EACpC,SADoC;;AAElD;AACA,2BAAO,QAAP,GAAkB,MAAK,QAAL,CAAc,IAAd,OAAlB;AACA,0BAAK,UAAL,GAAkB,UAAlB;AACA,0BAAK,aAAL,GAAqB,EAArB;AACA,0BAAK,cAAL,GAAsB,SAAtB;AACA;AACA,wBAAI,CAAC,eAAe,OAAf,CAAuB,UAAvB,CAAL,EAAyC;AACrC,uCAAe,OAAf,CAAuB,UAAvB,EAAmC,IAAnC;AACH,qBAFD,MAGK;AACD,8BAAK,aAAL,GAAqB,KAAK,KAAL,CAAW,eAAe,OAAf,CAAuB,UAAvB,CAAX,CAArB;AACH;AACD,0BAAK,UAAL;AAdkD;AAerD;AACD;;;;;;;iDAGa;AAAA;;AACT,4BAAI,UAAU,YAAY,kBAAZ,EAAd;AACA;AACA,6BAAK,UAAL,CAAgB,MAAhB,CAAuB,EAAE,cAAc,OAAhB,EAAyB,OAAO,KAAK,KAAL,CAAW,KAA3C,EAAvB,EAA2E,IAA3E,CAAgF,UAAC,MAAD,EAAY;AACxF,gCAAI,MAAM,QAAQ,OAAO,QAAP,CAAgB,QAAhB,CAAyB,KAAzB,CAA+B,GAA/B,EAAoC,GAApC,EAAlB;AACA,gCAAI,MAAM,EAAE,IAAF,CAAO,MAAP,EAAe,EAAE,KAAK,GAAP,EAAf,CAAV;AACA;AACA,gCAAI,EAAE,SAAF,CAAY,OAAK,aAAjB,EAAgC,EAAE,KAAK,eAAe,GAAtB,EAAhC,IAA+D,CAAnE,EAAsE;AAClE,uCAAK,aAAL,CAAmB,IAAnB,CAAwB,EAAE,KAAK,eAAe,GAAtB,EAA2B,MAAM,IAAI,KAArC,EAAxB;AACH;AACD;AACA,2CAAe,OAAf,CAAuB,UAAvB,EAAmC,KAAK,SAAL,CAAe,OAAK,aAApB,CAAnC;AACH,yBATD;AAUH;;;6CAKQ,G,EAAK;AACV;AACA;AACA,4BAAM,QAAQ,EAAE,SAAF,CAAY,KAAK,aAAjB,EAAgC,EAAE,KAAK,GAAP,EAAhC,CAAd;AACA,4BAAI,QAAQ,CAAC,CAAT,IAAc,KAAK,aAAL,CAAmB,MAAnB,IAA6B,QAAQ,CAAvD,EAA0D;AACtD,iCAAK,aAAL,CAAmB,MAAnB,CAA0B,QAAQ,CAAlC,EAAqC,KAAK,aAAL,CAAmB,MAAnB,GAA4B,KAA5B,GAAoC,CAAzE;AACA,2CAAe,OAAf,CAAuB,UAAvB,EAAmC,KAAK,SAAL,CAAe,KAAK,aAApB,CAAnC;AACH;AACD,6BAAK,cAAL,CAAoB,IAApB,CAAyB,GAAzB;AACH;;;;cAtDwB,S;;AAwD7B,2BAAe,WAAf,GAA6B,aAA7B;;sCACS,c;;iCAAgB,c","file":"breadcrumb_ctrl.js","sourcesContent":["/// <reference path=\"../typings/common.d.ts\" />\r\n/// <reference path=\"../typings/index.d.ts\" />\r\nimport _ from \"lodash\";\r\nimport { PanelCtrl } from \"app/plugins/sdk\";\r\nimport { impressions } from \"app/features/dashboard/impression_store\";\r\nimport \"./breadcrumb.css!\";\r\nclass BreadcrumbCtrl extends PanelCtrl {\r\n    /**\r\n     * Breadcrumb class constructor\r\n     * @param {IBreadcrumbScope} $scope Angular scope\r\n     * @param {ng.auto.IInjectorService} $injector Angluar injector service\r\n     * @param {ng.ILocationService} $location Angular location service\r\n     * @param {any} backendSrv Grafana backend callback\r\n     */\r\n    constructor($scope, $injector, $location, backendSrv) {\r\n        super($scope, $injector);\r\n        // Init variables\r\n        $scope.navigate = this.navigate.bind(this);\r\n        this.backendSrv = backendSrv;\r\n        this.dashboardList = [];\r\n        this.windowLocation = $location;\r\n        // Check for browser session storage and create one if it doesn't exist\r\n        if (!sessionStorage.getItem(\"dashlist\")) {\r\n            sessionStorage.setItem(\"dashlist\", \"[]\");\r\n        }\r\n        else {\r\n            this.dashboardList = JSON.parse(sessionStorage.getItem(\"dashlist\"));\r\n        }\r\n        this.updateText();\r\n    }\r\n    /**\r\n     * Update Breadcrumb items\r\n     */\r\n    updateText() {\r\n        var dashIds = impressions.getDashboardOpened();\r\n        // Fetch list of all dashboards from Grafana\r\n        this.backendSrv.search({ dashboardIds: dashIds, limit: this.panel.limit }).then((result) => {\r\n            var uri = \"db/\" + window.location.pathname.split(\"/\").pop();\r\n            var obj = _.find(result, { uri: uri });\r\n            // Add current dashboard to breadcrumb if it doesn't exist\r\n            if (_.findIndex(this.dashboardList, { url: \"dashboard/\" + uri }) < 0) {\r\n                this.dashboardList.push({ url: \"dashboard/\" + uri, name: obj.title });\r\n            }\r\n            // Update session storage\r\n            sessionStorage.setItem(\"dashlist\", JSON.stringify(this.dashboardList));\r\n        });\r\n    }\r\n    /**\r\n     * Navigate to given dashboard\r\n     * @param {string} url\r\n     */\r\n    navigate(url) {\r\n        // Check if user is navigating backwards in breadcrumb and\r\n        // remove all items that follow the selected item in that case\r\n        const index = _.findIndex(this.dashboardList, { url: url });\r\n        if (index > -1 && this.dashboardList.length >= index + 2) {\r\n            this.dashboardList.splice(index + 1, this.dashboardList.length - index - 1);\r\n            sessionStorage.setItem(\"dashlist\", JSON.stringify(this.dashboardList));\r\n        }\r\n        this.windowLocation.path(url);\r\n    }\r\n}\r\nBreadcrumbCtrl.templateUrl = \"module.html\";\r\nexport { BreadcrumbCtrl, BreadcrumbCtrl as PanelCtrl };\r\n//# sourceMappingURL=breadcrumb_ctrl.js.map"]}